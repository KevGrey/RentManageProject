version: '3'
services:
  mysql:
    container_name: mysql8
    platform: linux/x86_64
    image: mysql:${MYSQL_VERSION}
    restart: always
    ports:
      - 3309:3306
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: msproject
    volumes:
      - ${MYSQL_DIR}/data:/var/lib/mysql
      - ${MYSQL_DIR}/conf:/etc/mysql/conf.d/
      - ${MYSQL_DIR}/logs:/logs
    command:
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
  Redis:
    container_name: redis6
    image: redis:${REDIS_VERSION}
    restart: always
    volumes:
      - ${REDIS_DIR}/data:/data
      - ${REDIS_DIR}/conf/redis.conf:/etc/redis/redis.conf
    ports:
      - ${REDIS_PORT}:6379
    command: redis-server /etc/redis/redis.conf
  Etcd:
    container_name: etcd3
    image: bitnami/etcd:${ETCD_VERSION}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
    privileged: true
    volumes:
      - ${ETCD_DIR}/data:/bitnami/etcd/data
    ports:
      - ${ETCD_PORT}:2379
      - 2380:2380
#  Project-User:
#    container_name: project-user
#    image: project-user:latest
#    ports:
#      - 8080:8080
#      - 8881:8881
#  Nacos:
#    container_name: nacos-standalone
#    image: zhusaidong/nacos-server-m1:2.0.3
#    restart: always
#    environment:
#      - MODE=standalone
#      - JVM_XMS=512m
#      - JVM_MAX=512m
#      - JVM_XMN=256m
#    privileged: true
#    volumes:
#      - ${NACOS_DIR}/data:/home/nacos/data
#    ports:
#      - 8848:8848
#      - 9848:9848
#      - 9849:9849

  Jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.41
    restart: always
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=${BADGER_EPHEMERAL}
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
    privileged: true
    volumes:
      - ${JAEGER_DIR}:/badger
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14269:14269
      - 9411:9411
  Nacos:
    container_name: nacos-standalone
    image: zhusaidong/nacos-server-m1:2.0.3
    restart: always
    environment:
      - MODE=standalone
      - JVM_XMS=512m
      - JVM_MAX=512m
      - JVM_XMN=256m
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_SERVICE_DB_NAME=nacos
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=root
    privileged: true
    volumes:
      - ${NACOS_DIR}/data:/home/nacos/data
      - ${NACOS_DIR}/logs:/home/nacos/logs
      - nacos-conf:/home/nacos/conf
    ports:
      - 8848:8848
      - 9848:9848
      - 9849:9849

#  kafdrop:
#    container_name: kafdrop
#    image: linuxforhealth/kafdrop
#    restart: "no"
#    ports:
#      - "9000:9000"
#    environment:
#      KAFKA_BROKERCONNECT: "kafka:29092"
#      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
#    depends_on:
#      - "kafka"
#  kafka-ui:
#    image: provectuslabs/kafka-ui
#    container_name: kafka-ui
#    ports:
#      - "9000:8080"
#    restart: "always"
#    environment:
#      KAFKA_CLUSTERS_0_NAME: "local"
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
##      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:29092"
##      KAFKA_CLUSTERS_0_ZOOKEEPER: "192.168.153.131:2181"
##      KAFKA_CLUSTERS_0_READONLY: "true"
#  zookeeper:
#    image: docker.io/bitnami/zookeeper:3.8
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#    volumes:
#      - ${ZOOKEEPER_DIR}:/bitnami/zookeeper #持久化数据
#    environment:
#      - TZ=Asia/Shanghai
#      - ALLOW_ANONYMOUS_LOGIN=yes
##  kafka:
##    container_name: kafka
##    image: obsidiandynamics/kafka
##    restart: "no"
##    ports:
##      - "2181:2181"
##      - "9092:9092"
##    environment:
##      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
##      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
##      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
##      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
##      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
##      KAFKA_RESTART_ATTEMPTS: "10"
##      KAFKA_RESTART_DELAY: "5"
##      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
#  kafka:
#    restart: always
#    image: obsidiandynamics/kafka
#    network_mode: "bridge"
#    container_name: kafka
#    ports:
#      - "9092:9092"
#    environment:
#      - TZ=Asia/Shanghai - KAFKA_BROKER_ID=1
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 #替换成你自己的IP
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#      - ALLOW_PLAINTEXT_LISTENER=yes
#    depends_on:
#      - zookeeper
#  zookeeper:
#    image: zookeeper:3.6
#    ports:
#      - "2181:2181"
#    volumes:
#      - ${ZOOKEEPER_DIR}/data:/data
#      - ${ZOOKEEPER_DIR}/data/datalog:/data/datalog
#      - ${ZOOKEEPER_DIR}/datalog:/datalog
#  kafka:
#    image: cppla/kafka-docker:arm
##    image: obsidiandynamics/kafka
#    ports:
#       - "9092:9092"
#    environment:
#        - KAFKA_ADVERTISED_HOST_NAME=127.0.0.1
#        - KAFKA_ZOOKEEPER_CONNECT=127.0.0.1:2181
#        - KAFKA_ADVERTISED_PORT=9092
#        - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
#        - KAFKA_LISTENERS=PLAINTEXT://127.0.0.1:9092
#    volumes:
##        - /var/run/docker.sock:/var/run/docker.sock
#        - ${KAFKA_DIR}:/kafka
#    depends_on:
#        - zookeeper
#  kafka-ui:
#    image: provectuslabs/kafka-ui
#    container_name: kafka-ui
#    ports:
#      - "9000:8080"
#    restart: always
#    environment:
#        - KAFKA_CLUSTERS_0_NAME=local
#        - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=127.0.0.1:9092
#        - KAFKA_CLUSTERS_0_ZOOKEEPER=127.0.0.1:2181
#        - KAFKA_CLUSTERS_0_READONLY=true
#    depends_on:
#        - kafka
#        - zookeeper
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - ${ZOOKEEPER_DIR}/data:/data
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "topic1:1:1,topic2:1:1"
#      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
#      KAFKA_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
#      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
#      KAFKA_RESTART_ATTEMPTS: "10"
#      KAFKA_RESTART_DELAY: "5"
    volumes:
      - ${KAFKA_DIR}:/kafka
    depends_on:
      - zookeeper
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "9000:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CLUSTERS_0_JMX_PORT: '9999'
    volumes:
      - ${KAFKA_DIR}/data:/kafka/data
    depends_on:
      - kafka
  es:
    container_name: es
    image: elasticsearch:8.6.0
    volumes:
      - ${ES_DIR}/data:/usr/share/elasticsearch/data
      - ${ES_DIR}/logs:/usr/share/elasticsearch/logs
      - ${ES_DIR}/plugins:/usr/share/elasticsearch/plugins
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - node.name=es
      - cluster.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    privileged: true
  kibana:
    image: kibana:8.6.0
    container_name: kibana
    depends_on:
      - es
    environment:
      SERVER_NAME: kibana
      SERVER_HOST: "0.0.0.0"
      ELASTICSEARCH_HOSTS: http://es:9200
    ports:
      - 5601:5601
  logstash:
    image: logstash:8.6.0
    container_name: logstash
    volumes:
      - ${LOGSTASH_DIR}/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ${LOGSTASH_DIR}/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ${LOGSTASH_DIR}/log/:/home/public/
    ports:
      - '5044:5044'
      - '50000:50000/tcp'
      - '50000:50000/udp'
      - '9600:9600'
    environment:
      LS_JAVA_OPTS: -Xms1024m -Xmx1024m
      TZ: Asia/Shanghai
      MONITORING_ENABLED: false
    depends_on:
      - es
  minio:
    container_name: minio
    image: bitnami/minio:2023
    ports:
      - '9009:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin123456
    volumes:
      - '${MINIO_DIR}/data:/data'
#http://localhost:9001/
volumes:
  nacos-conf:
    driver: local
    driver_opts:
      type: 'none'
      device: '${NACOS_DIR}/conf'
      o: 'bind'

